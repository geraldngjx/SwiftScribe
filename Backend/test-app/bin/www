#!/usr/bin/env node

const app = require('../app');
const debug = require('debug')('custom-app:server');
const http = require('http');

const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

const server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? `Socket ${port}`
    : `Port ${port}`;

  if (error.code === 'EACCES') {
    console.error(`Error: ${bind} requires elevated privileges`);
    process.exit(1);
  } else if (error.code === 'EADDRINUSE') {
    console.error(`Error: ${bind} is already in use`);
    process.exit(1);
  } else {
    throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? `Socket ${addr}`
    : `Port ${addr.port}`;
  debug(`Server is now listening on ${bind}`);
}